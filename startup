#!/usr/bin/php
<?php

// Robots roles
$roles = [
    'olive' => 'B',
    'mowgly' => 'D',
    'arya' => 'A',
    'tom' => 'C',
    'chewbacca' => 'C',
    'django' => 'A'
];

// Compass offsets and field settings
$fields = [
    'E' => [135, -45]
];

$host = '10.0.0.1';
if (count($argv) >= 2) {
    $host = $argv[1];
}

function msg($phase, $msg) {
    echo "\n\e[1m$phase: $msg\e[m\n";
}
function question($phase, $msg) {
    while (true) {
        echo "\n\e[1m$phase: $msg\e[m (y/n)\n";
        echo "> ";
        flush();
        $m = trim(readline());
        if ($m == 'y') return true;
        if ($m == 'n') return false;
        echo "You should answer 'y' or 'n'\n";
    }
}
function cmd($cmd, $display = true) {
    global $host;
    $result = trim(`rhio $host $cmd`);
    if ($display) echo "$result\n";
    return $result;
}
function isHandled() {
    $r = cmd('/decision/handled');

    return $r == '/decision/handled=true';
}

$hostname = explode('=', cmd('/server/hostname', false));
if (count($hostname) > 1) $hostname = $hostname[1];
else $hostname = '?';

msg('STARTUP', 'Robot is: '.$hostname);

while (true) {
    msg('CHECK', 'Checking that all devices are present');
    $r = cmd('rhalCheck');
    if (strpos($r, 'All devices are present') === false) {
        if (question("\e[31mERROR", 'There was errors in the check, continue anyway?')) {
            break;
        }
    } else {
        break;
    }
}

if (question('DROPIN', 'Is it a drop-in game?')) {
    if (question('DROPIN', 'Is the team ID 100?')) {
        cmd('/referee/teamId=100');
    } else {
        cmd('/referee/teamId=101');
    }
} else {
    cmd('/referee/teamId=16');
}

$field = '';
while (!$field) {
    $available = implode(', ', array_keys($fields));
    msg('FIELD', 'What is the current field (possibilities: '.$available.')?');
    echo '> ';
    $field = trim(readline());

    if (!isset($fields[$field])) {
        msg("\e[31mERROR", 'Unknown field "'.$field.'"');
        $field = '';
    }
}

while (true) {
    if (question('WIFI', 'Do you want to run the wifi script?')) {
        passthru("./wifi $host $field");
    }

    msg('CHECK', 'Checking that there is info from the referee');
    $r = cmd('infoPlaying');
    preg_match('#Referee last update: (.+)\.$#mUsi', $r, $match);
    if ($match && (float)($match[1]) > 5) {
        if (question("\e[31mERROR", 'No info from the referee, continue anyway?')) {
            break;
        }
    } else {
        break;
    }
}

msg('INIT', 'Press enter to run init');
readline();
cmd('init');

msg('INIT', 'Press enter to run the walk');
readline();
cmd('walk');

msg('TARE', 'Hold me in the air for the tare and press enter');
readline();
cmd('tare');

while (true) {
    msg('GYROTARE', 'Put me on the floor now');
    readline();
    cmd('rhalGyroTare');
    cmd('rhalSaveConf rhal.json');

    msg('CHECK', 'Checking the pressure');
    if (isHandled()) {
        if (question("\e[31mERROR", 'Decision said I am handled when I should be on the floor, continue anyway?')) {
            break;
        }
    } else {
        break;
    }
}

msg('CONFIG', 'What player am I ? (B: free kicker, D: goal, A & C: others)');
echo "
    .----------------A---.-------------------.
    |                    |                   |
    |                A'  |                   |
    |                    |                   |
    -                    |                   -
      D     +        B' ( )  OPPONENT FIELD
    -                    |                   -
    |                    |                   |
    |          C'        |                   |
    |                    |                   |
    .------C---------B---.-------------------.

";

$positions = array(
    'A' => [
        -75, 300, -90,  // Start pos
        -75, 150,       // Init pos
        250, 100, 0,     // Patrol1
        -150, 100, 180,  // Patrol2
        150
    ],
    'B' => [
        -75, -300, 90,
        -150, 0,
        250, -100, 0,
        -150, -100, 180,
        100
    ],
    'C' => [
        -250, -300, 90,
        -150, -150,
        -250, 150, 90,
        -250, -150, -90,
        200
    ],
    'D' => [
        -400, 300, 90,
        -400, 0,
        0, 0, 0,
        0, 0, 0,
        250
    ],
);

if (isset($roles[$hostname])) {
    $position = $roles[$hostname];
    msg('ROLE', "Automatically assigning $hostname to role $position");
} else {
    $position = '';
    while (!$position) {
        $position = trim(readline());
        if (!isset($positions[$position])) {
            $position='';
            echo "You should type 'A', 'B', 'C' or 'D'\n";
        }
    }
}

if ($position == 'D') {
    cmd('/moves/robocup/goalKeeper=1');
    cmd('/moves/robocup/autoKickOff=0');
} else {
    cmd('/moves/robocup/goalKeeper=0');
    cmd('/moves/robocup/autoKickOff=1');
}

if ($position == 'B') {
    cmd('/moves/robocup/freeKicker=1');
} else {
    cmd('/moves/robocup/freeKicker=0');
}

$config = "";
$c = $positions[$position];
$config .= '/moves/robocup/autoStartX='.$c[0]."\n";
$config .= '/moves/robocup/autoStartY='.$c[1]."\n";
$config .= '/moves/robocup/autoStartAzimuth='.$c[2]."\n";
$config .= '/moves/robocup/autoTargetX='.$c[3]."\n";
$config .= '/moves/robocup/autoTargetY='.$c[4]."\n";
if ($position == 'D') {
    // Margins for placer
    $config .= '/moves/placer/marginX=15'."\n";
    $config .= '/moves/placer/marginY=15'."\n";
    $config .= '/moves/placer/hysteresis=2'."\n";
} else {
    // Patrol
    $config .= '/moves/search/P1X='.$c[5]."\n";
    $config .= '/moves/search/P1Y='.$c[6]."\n";
    $config .= '/moves/search/P1Azimuth='.$c[7]."\n";
    $config .= '/moves/search/P2X='.$c[8]."\n";
    $config .= '/moves/search/P2Y='.$c[9]."\n";
    $config .= '/moves/search/P2Azimuth='.$c[10]."\n";
    // Begin Y target
    $config .= '/moves/search/beginY=150'."\n";
    $config .= '/moves/search/beginY=-150'."\n";
}
$config .= '/teamplay/teamRadius='.$c[11]."\n";
$config .= '/moves/robocup/freeKickX=-50'."\n";
$config .= '/moves/robocup/freeKickY=0'."\n";
$config .= '/moves/placer/directMode=true'."\n";
$config .= '/teamplay/aggressivity=0.75'."\n";
$config .= "exit\n";
$tmp = tempnam(sys_get_temp_dir(), 'startup');
file_put_contents($tmp, $config);
`rhio $host < $tmp`;
unlink($tmp);

//Fix it later
$side = '';
while (!$side) {
    $available = implode(', ', array_keys($fields));
    msg('FIELD', 'Are we attacking left or right (possibilities: L or R)?');
    echo '> ';
    $side = trim(readline());

    if ($side != 'L' && $side != 'R') {
        msg("\e[31mERROR", 'You should enter "L" or "R"');
        $side = '';
    }
}
$compassOffset = $fields[$field][$side == 'L' ? 0 : 1];
echo("Setting compass offset to $compassOffset");
cmd('/Localisation/Field/CompassObservation/offset='.$compassOffset);

msg('GO', 'Press enter to run robocup');
readline();
cmd('robocup');

msg("\e[32mYODA", 'May the force be with you');
echo "\n";
